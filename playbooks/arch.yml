---
  - name: Prepare the workstation
    hosts: localhost
    connection: local

    tasks:
      # INSTALL PACMAN APPS
      - name: Installing with pacman
        block:
          - name: loop for instalation
            pacman:
              name: '{{ item }}'
              state: present
            loop:
              - lf
              - base-devel
              - curl
              - kitty
              - syncthing
              - vim
              - vscode
              - less
              - python-pip

      # install JetBrainsMono
      - name: install JetBrainsMono
        block:
          - name: Find JetBrainsMono fonts
            find:
              paths: '{{ ansible_user_dir }}/.local/share/fonts/'
              patterns: 'JetBrainsMono*'
            register: font_found

          - name: Ensure fonts directory exists
            file:
              path: '{{ ansible_user_dir }}/.local/share/fonts'
              state: directory
              mode: '0755'

          - name: Download JetBrainsMono zip
            get_url:
              url: https://github.com/ryanoasis/nerd-fonts/releases/download/v3.2.1/JetBrainsMono.zip
              dest: /tmp/JetBrainsMono.zip
            when: font_found.matched == 0

          - name: Unzip JetBrainsMono fonts
            command: unzip /tmp/JetBrainsMono.zip -d {{ ansible_user_dir }}/.local/share/fonts/
            when: font_found.matched == 0

          - name: Update font cache
            command: fc-cache -fv
            when: font_found.matched == 0

      # config kitty
      - name: config terminal emulator
        block:
          - name: Remove existing kitty file
            file:
              path: '{{ ansible_env.HOME }}/.config/kitty'
              state: absent
            ignore_errors: yes

          - name: Create or ensure the kitty directory exists
            file:
              path: '{{ ansible_env.HOME }}/.config/kitty'
              state: directory

          - name: Create symbolic link to kitty.conf
            command: >
              ln -sf '{{ ansible_env.HOME }}/.dotfiles/dotfiles/kitty/kitty.conf' '{{ ansible_env.HOME }}/.config/kitty/kitty.conf'
            args:
              creates: '{{ ansible_env.HOME }}/.config/kitty/kitty.conf'

          - name: Create symbolic link to theme.conf
            command: >
              ln -sf '{{ ansible_env.HOME }}/.dotfiles/dotfiles/kitty/theme.conf' '{{ ansible_env.HOME }}/.config/kitty/theme.conf'
            args:
              creates: '{{ ansible_env.HOME }}/.config/kitty/theme.conf'
      
      # config shell
      - name: Config bash
        block:
          - name: Set up bash theme
            lineinfile:
              path: ~/.bashrc
              regexp: '^OSH_THEME='
              line: 'OSH_THEME="clean"'
              state: present
              
          - name: Set up dotfiles
            lineinfile:
              path: ~/.bashrc
              line: 'alias dotfiles="python ~/.dotfiles/bin/main.py"'
              create: yes
                        
          - name: Set up nvm
            lineinfile:
              path: ~/.bashrc
              line: 'export NVM_DIR="$HOME/.nvm"'
              create: yes

          - name: Loads up nvm
            lineinfile:
              path: ~/.bashrc
              line: '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' # This loads nvm
              create: yes
          
      # config vscode
      - name: Config vscode
        block:
          - name: Install extensions
            command: >
              code --install-extension arcticicestudio.nord-visual-studio-code &&
              code --install-extension wilfriedago.vscode-Symbols-Icon-Theme && 
            ignore_errors: true
          
          - name: Remove the settings file
            file:
              path: ~/.config/Code\ -\ OSS/User/settings.json
              state: absent
            ignore_errors: true
          
          - name: Make the hard link to the config
            command: >
              ln -f ~/.dotfiles/dotfiles/vscode/settings.json ~/.config/Code\ -\ OSS/User/settings.json
