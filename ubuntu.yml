---
- name: Prepare the workstation
  hosts: localhost
  connection: local

  tasks:
    # INSTALL APT APPS
    - name: Update apt repository cache
      apt:
        update_cache: yes

    - name: Installing with apt
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - lf
        - build-essential
        - curl
        - kitty
        - syncthing
        - vim
        - code # Visual Studio Code
        - less

    # install JetBrainsMono
    - name: install JetBrainsMono
      block:
        - name: Find JetBrainsMono fonts
          find:
            paths: '{{ ansible_user_dir }}/.local/share/fonts/'
            patterns: 'JetBrainsMono*'
          register: font_found

        - name: Ensure fonts directory exists
          file:
            path: '{{ ansible_user_dir }}/.local/share/fonts'
            state: directory
            mode: '0755'

        - name: Download JetBrainsMono zip
          get_url:
            url: https://github.com/ryanoasis/nerd-fonts/releases/download/v3.2.1/JetBrainsMono.zip
            dest: /tmp/JetBrainsMono.zip
          when: font_found.matched == 0

        - name: Unzip JetBrainsMono fonts
          unarchive:
            src: /tmp/JetBrainsMono.zip
            dest: '{{ ansible_user_dir }}/.local/share/fonts/'
            remote_src: yes
          when: font_found.matched == 0

        - name: Update font cache
          command: fc-cache -fv
          when: font_found.matched == 0

    # config kitty
    - name: config terminal emulator
      block:
        - name: Remove existing kitty file
          file:
            path: '{{ ansible_env.HOME }}/.config/kitty'
            state: absent
          ignore_errors: yes

        - name: Create or ensure the kitty directory exists
          file:
            path: '{{ ansible_env.HOME }}/.config/kitty'
            state: directory

        - name: Create symbolic link to kitty.conf
          command: >
            ln -sf '{{ ansible_env.HOME }}/.dotfiles/dotfiles/kitty/kitty.conf' '{{ ansible_env.HOME }}/.config/kitty/kitty.conf'
          args:
            creates: '{{ ansible_env.HOME }}/.config/kitty/kitty.conf'

        - name: Create symbolic link to theme.conf
          command: >
            ln -sf '{{ ansible_env.HOME }}/.dotfiles/dotfiles/kitty/theme.conf' '{{ ansible_env.HOME }}/.config/kitty/theme.conf'
          args:
            creates: '{{ ansible_env.HOME }}/.config/kitty/theme.conf'

    # config shell
    - name: Config bash
      block:
        - name: Set up dotfiles alias
          lineinfile:
            path: ~/.bashrc
            line: 'alias dotfiles="~/.dotfiles/bin/dotfiles"'
            create: yes
                      
        - name: Set up nvm
          lineinfile:
            path: ~/.bashrc
            line: 'export NVM_DIR="$HOME/.nvm"'
            create: yes

        - name: Load up nvm
          lineinfile:
            path: ~/.bashrc
            line: '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' # This loads nvm
            create: yes
    
    # config vscode
    - name: Config vscode
      block:
        - name: Install extensions
          command: >
            code --install-extension PROxZIMA.SweetDracula &&
            code --install-extension wilfriedago.vscode-Symbols-Icon-Theme && 
            code --install-extension redhat.vscode-yaml
          ignore_errors: yes
        
        - name: Remove the settings file
          file:
            path: ~/.config/Code\ -\ OSS/User/settings.json
            state: absent
          ignore_errors: yes
        
        - name: Make the hard link to the config
          command: >
            ln -f ~/.dotfiles/dotfiles/vscode/settings.json ~/.config/Code\ -\ OSS/User/settings.json
